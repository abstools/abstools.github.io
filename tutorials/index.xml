<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutorials on The ABS Modeling Language</title>
    <link>https://abs-models.org/tutorials/</link>
    <description>Recent content in Tutorials on The ABS Modeling Language</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 22 Mar 2018 12:21:52 +0100</lastBuildDate>
    
	<atom:link href="https://abs-models.org/tutorials/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Language Tutorial</title>
      <link>https://abs-models.org/tutorials/language-tutorial/</link>
      <pubDate>Thu, 22 Mar 2018 12:22:10 +0100</pubDate>
      
      <guid>https://abs-models.org/tutorials/language-tutorial/</guid>
      <description>This tutorial is partially adapted but needs updating to the newest language and tool features
1 Installation of the ABS Eclipse Plugin ABS fills a gap in the landscape of software modeling languages. It is situated between architectural, design-oriented, foundational, and implementation-oriented languages [25] For trying out the examples provided in this tutorial you will need the ABS Eclipse plugin. To install it, follow the simple instructions at http://tools. hats-project.</description>
    </item>
    
    <item>
      <title>CostABS</title>
      <link>https://abs-models.org/tutorials/costabs/</link>
      <pubDate>Thu, 07 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://abs-models.org/tutorials/costabs/</guid>
      <description>This tutorial is partially adapted from the pdf tutorial. Content is accurate but the last sections are missing
CostABS is a a static analyzer for automatically inferring upper/lower bounds on the worst/best-case Resource usage (a.k.a. cost) of ABS programs. The inferred upper bounds have important applications in the fields of program optimization, verification and certification. CostABS is parametric on the cost model, i.e., the type of cost that the user wants to infer (e.</description>
    </item>
    
    <item>
      <title>Resources</title>
      <link>https://abs-models.org/tutorials/resources/</link>
      <pubDate>Tue, 04 Jul 2017 09:31:38 +0200</pubDate>
      
      <guid>https://abs-models.org/tutorials/resources/</guid>
      <description>Core ABS ABS is a modeling language which combines functional and imperative programming styles to develop high-level executable models. Concurrent object groups execute in parallel and communicate through asynchronous method calls. To intuitively capture internal computation inside a method, we use a simple functional language based on user-defined algebraic data types and functions. Thus, the modeler may abstract from the details of low-level imperative implementations of data structures, and still maintain an overall object-oriented design which is close to the target system.</description>
    </item>
    
  </channel>
</rss>